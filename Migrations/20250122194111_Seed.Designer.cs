// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using film_zad.Models;

#nullable disable

namespace film_zad.Migrations
{
    [DbContext(typeof(FilmDbContext))]
    [Migration("20250122194111_Seed")]
    partial class Seed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("film_zad.Models.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("KategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KategoriaId");

                    b.ToTable("Films");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Niezła impreza",
                            KategoriaId = 1,
                            Name = "Kac Vegas",
                            Price = 50
                        },
                        new
                        {
                            Id = 2,
                            Description = "Chyba nie dolecą",
                            KategoriaId = 2,
                            Name = "Lot 93",
                            Price = 40
                        },
                        new
                        {
                            Id = 3,
                            Description = "Wojna, strzelanie, śmierć",
                            KategoriaId = 3,
                            Name = "Furia",
                            Price = 60
                        });
                });

            modelBuilder.Entity("film_zad.Models.Kategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kategoria");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Komedia"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dokument"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Dramat"
                        });
                });

            modelBuilder.Entity("film_zad.Models.Film", b =>
                {
                    b.HasOne("film_zad.Models.Kategoria", "Kategoria")
                        .WithMany("Films")
                        .HasForeignKey("KategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategoria");
                });

            modelBuilder.Entity("film_zad.Models.Kategoria", b =>
                {
                    b.Navigation("Films");
                });
#pragma warning restore 612, 618
        }
    }
}
